Search.setIndex({"alltitles": {"Contents:": [[0, null], [4, null], [5, null], [7, null], [8, null], [10, null], [13, null]], "board": [[2, null]], "game": [[3, null]], "ipos-sphinx-activity documentation": [[0, null]], "main": [[1, null]], "modular_version": [[4, null]], "pytests": [[8, null]], "script_version": [[5, null]], "src": [[7, null]], "test_board": [[11, null]], "test_game": [[12, null]], "test_tic_tac_toe": [[9, null]], "tests": [[10, null]], "tic_tic_tac_toe": [[6, null]], "unittests": [[13, null]]}, "docnames": ["index", "main", "src/modular_version/board", "src/modular_version/game", "src/modular_version/modular_version", "src/script_version/script_version", "src/script_version/tic_tac_toe", "src/src", "tests/pytests/pytests", "tests/pytests/test_tic_tac_toe", "tests/tests", "tests/unittests/test_board", "tests/unittests/test_game", "tests/unittests/unittests"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "main.rst", "src/modular_version/board.rst", "src/modular_version/game.rst", "src/modular_version/modular_version.rst", "src/script_version/script_version.rst", "src/script_version/tic_tac_toe.rst", "src/src.rst", "tests/pytests/pytests.rst", "tests/pytests/test_tic_tac_toe.rst", "tests/tests.rst", "tests/unittests/test_board.rst", "tests/unittests/test_game.rst", "tests/unittests/unittests.rst"], "indexentries": {"board (class in src.modular_version.board)": [[2, "src.modular_version.board.Board", false]], "check_for_tie() (src.modular_version.game.game method)": [[3, "src.modular_version.game.Game.check_for_tie", false]], "check_for_valid_position() (src.modular_version.board.board method)": [[2, "src.modular_version.board.Board.check_for_valid_position", false]], "check_for_win() (src.modular_version.game.game method)": [[3, "src.modular_version.game.Game.check_for_win", false]], "display() (src.modular_version.board.board method)": [[2, "src.modular_version.board.Board.display", false]], "enter_position() (src.modular_version.board.board method)": [[2, "src.modular_version.board.Board.enter_position", false]], "game (class in src.modular_version.game)": [[3, "src.modular_version.game.Game", false]], "get_input() (src.modular_version.game.game method)": [[3, "src.modular_version.game.Game.get_input", false]], "get_position() (src.modular_version.board.board method)": [[2, "src.modular_version.board.Board.get_position", false]], "is_win() (in module src.script_version.tic_tac_toe)": [[6, "src.script_version.tic_tac_toe.is_win", false]], "main": [[1, "module-main", false]], "main() (in module main)": [[1, "main.main", false]], "main() (in module src.script_version.tic_tac_toe)": [[6, "src.script_version.tic_tac_toe.main", false]], "module": [[1, "module-main", false], [2, "module-src.modular_version.board", false], [3, "module-src.modular_version.game", false], [6, "module-src.script_version.tic_tac_toe", false], [9, "module-tests.pytests.test_tic_tac_toe", false], [11, "module-tests.unittests.test_board", false], [12, "module-tests.unittests.test_game", false]], "play() (src.modular_version.game.game method)": [[3, "src.modular_version.game.Game.play", false]], "print_board() (in module src.script_version.tic_tac_toe)": [[6, "src.script_version.tic_tac_toe.print_board", false]], "setup() (tests.unittests.test_board.testboard method)": [[11, "tests.unittests.test_board.TestBoard.setUp", false]], "setup() (tests.unittests.test_game.testgame method)": [[12, "tests.unittests.test_game.TestGame.setUp", false]], "src.modular_version.board": [[2, "module-src.modular_version.board", false]], "src.modular_version.game": [[3, "module-src.modular_version.game", false]], "src.script_version.tic_tac_toe": [[6, "module-src.script_version.tic_tac_toe", false]], "tally_wins() (in module src.script_version.tic_tac_toe)": [[6, "src.script_version.tic_tac_toe.tally_wins", false]], "test_check_tie_conditions_board_no_tie_returns_false() (tests.unittests.test_game.testgame method)": [[12, "tests.unittests.test_game.TestGame.test_check_tie_conditions_board_no_tie_returns_false", false]], "test_check_tie_conditions_empty_board_returns_false() (tests.unittests.test_game.testgame method)": [[12, "tests.unittests.test_game.TestGame.test_check_tie_conditions_empty_board_returns_false", false]], "test_check_tie_conditions_full_board_returns_true() (tests.unittests.test_game.testgame method)": [[12, "tests.unittests.test_game.TestGame.test_check_tie_conditions_full_board_returns_true", false]], "test_check_win_conditions_diagonal_win_returns_true() (tests.unittests.test_game.testgame method)": [[12, "tests.unittests.test_game.TestGame.test_check_win_conditions_diagonal_win_returns_true", false]], "test_check_win_conditions_horizontal_win_returns_true() (tests.unittests.test_game.testgame method)": [[12, "tests.unittests.test_game.TestGame.test_check_win_conditions_horizontal_win_returns_true", false]], "test_check_win_conditions_no_win_returns_false() (tests.unittests.test_game.testgame method)": [[12, "tests.unittests.test_game.TestGame.test_check_win_conditions_no_win_returns_false", false]], "test_check_win_conditions_vertical_win_returns_true() (tests.unittests.test_game.testgame method)": [[12, "tests.unittests.test_game.TestGame.test_check_win_conditions_vertical_win_returns_true", false]], "test_enter_position_sets_correctly() (tests.unittests.test_board.testboard method)": [[11, "tests.unittests.test_board.TestBoard.test_enter_position_sets_correctly", false]], "test_get_position_returns_correct_character() (tests.unittests.test_board.testboard method)": [[11, "tests.unittests.test_board.TestBoard.test_get_position_returns_correct_character", false]], "test_is_win_column_win() (in module tests.pytests.test_tic_tac_toe)": [[9, "tests.pytests.test_tic_tac_toe.test_is_win_column_win", false]], "test_is_win_diagonal_win() (in module tests.pytests.test_tic_tac_toe)": [[9, "tests.pytests.test_tic_tac_toe.test_is_win_diagonal_win", false]], "test_is_win_no_win() (in module tests.pytests.test_tic_tac_toe)": [[9, "tests.pytests.test_tic_tac_toe.test_is_win_no_win", false]], "test_is_win_row_win() (in module tests.pytests.test_tic_tac_toe)": [[9, "tests.pytests.test_tic_tac_toe.test_is_win_row_win", false]], "test_validate_position_filled_position_returns_false() (tests.unittests.test_board.testboard method)": [[11, "tests.unittests.test_board.TestBoard.test_validate_position_filled_position_returns_false", false]], "test_validate_position_invalid_position_returns_false() (tests.unittests.test_board.testboard method)": [[11, "tests.unittests.test_board.TestBoard.test_validate_position_invalid_position_returns_false", false]], "test_validate_position_valid_position_returns_true() (tests.unittests.test_board.testboard method)": [[11, "tests.unittests.test_board.TestBoard.test_validate_position_valid_position_returns_true", false]], "testboard (class in tests.unittests.test_board)": [[11, "tests.unittests.test_board.TestBoard", false]], "testgame (class in tests.unittests.test_game)": [[12, "tests.unittests.test_game.TestGame", false]], "tests.pytests.test_tic_tac_toe": [[9, "module-tests.pytests.test_tic_tac_toe", false]], "tests.unittests.test_board": [[11, "module-tests.unittests.test_board", false]], "tests.unittests.test_game": [[12, "module-tests.unittests.test_game", false]]}, "objects": {"": [[1, 0, 0, "-", "main"]], "main": [[1, 1, 1, "", "main"]], "src.modular_version": [[2, 0, 0, "-", "board"], [3, 0, 0, "-", "game"]], "src.modular_version.board": [[2, 2, 1, "", "Board"]], "src.modular_version.board.Board": [[2, 3, 1, "", "check_for_valid_position"], [2, 3, 1, "", "display"], [2, 3, 1, "", "enter_position"], [2, 3, 1, "", "get_position"]], "src.modular_version.game": [[3, 2, 1, "", "Game"]], "src.modular_version.game.Game": [[3, 3, 1, "", "check_for_tie"], [3, 3, 1, "", "check_for_win"], [3, 3, 1, "", "get_input"], [3, 3, 1, "", "play"]], "src.script_version": [[6, 0, 0, "-", "tic_tac_toe"]], "src.script_version.tic_tac_toe": [[6, 1, 1, "", "is_win"], [6, 1, 1, "", "main"], [6, 1, 1, "", "print_board"], [6, 1, 1, "", "tally_wins"]], "tests.pytests": [[9, 0, 0, "-", "test_tic_tac_toe"]], "tests.pytests.test_tic_tac_toe": [[9, 1, 1, "", "test_is_win_column_win"], [9, 1, 1, "", "test_is_win_diagonal_win"], [9, 1, 1, "", "test_is_win_no_win"], [9, 1, 1, "", "test_is_win_row_win"]], "tests.unittests": [[11, 0, 0, "-", "test_board"], [12, 0, 0, "-", "test_game"]], "tests.unittests.test_board": [[11, 2, 1, "", "TestBoard"]], "tests.unittests.test_board.TestBoard": [[11, 3, 1, "", "setUp"], [11, 3, 1, "", "test_enter_position_sets_correctly"], [11, 3, 1, "", "test_get_position_returns_correct_character"], [11, 3, 1, "", "test_validate_position_filled_position_returns_false"], [11, 3, 1, "", "test_validate_position_invalid_position_returns_false"], [11, 3, 1, "", "test_validate_position_valid_position_returns_true"]], "tests.unittests.test_game": [[12, 2, 1, "", "TestGame"]], "tests.unittests.test_game.TestGame": [[12, 3, 1, "", "setUp"], [12, 3, 1, "", "test_check_tie_conditions_board_no_tie_returns_false"], [12, 3, 1, "", "test_check_tie_conditions_empty_board_returns_false"], [12, 3, 1, "", "test_check_tie_conditions_full_board_returns_true"], [12, 3, 1, "", "test_check_win_conditions_diagonal_win_returns_true"], [12, 3, 1, "", "test_check_win_conditions_horizontal_win_returns_true"], [12, 3, 1, "", "test_check_win_conditions_no_win_returns_false"], [12, 3, 1, "", "test_check_win_conditions_vertical_win_returns_true"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "terms": {"": [2, 3], "3": 2, "3x3": 6, "A": 6, "No": 6, "The": [3, 6], "all": [7, 10], "an": 0, "ani": 3, "arg": 6, "been": [3, 6], "befor": [11, 12], "being": 3, "board": [3, 4, 6, 7, 11, 12], "bool": [2, 3, 6], "boolean": 6, "bound": 2, "call": [1, 6], "char": 2, "charact": [2, 11], "check": [2, 3, 6], "check_for_ti": [3, 4, 12], "check_for_valid_posit": [2, 4, 11], "check_for_win": [3, 4, 12], "class": [2, 3, 11, 12], "code": [7, 10], "column": [6, 9], "command": 6, "condit": [3, 6, 9], "contain": [2, 3, 4, 7, 10], "correct": 11, "cours": 0, "current": 3, "defin": 3, "diagon": [6, 9, 12], "directori": [4, 7, 10], "displai": [2, 4], "each": 6, "elsewher": 6, "empti": [2, 12], "enter": 3, "enter_posit": [2, 4, 11], "exampl": 0, "exercis": [11, 12], "fals": [6, 11, 12], "file": 6, "fill": 11, "fixtur": [11, 12], "full": 12, "function": [1, 6, 9], "game": [1, 2, 4, 6, 7, 12], "get": 2, "get_input": [3, 4], "get_posit": [2, 4, 11], "given": 2, "ha": 6, "handl": 3, "have": 3, "here": 6, "hold": [5, 6], "hook": [11, 12], "horizont": 12, "i": [2, 3, 6, 12], "import": 6, "input": 11, "int": [2, 3, 6], "intend": 6, "invalid": 11, "is_win": [5, 6, 9], "left": 3, "line": 6, "list": 6, "loop": [1, 3, 6], "main": [0, 3, 5, 6], "mark": 2, "met": [3, 6], "method": [11, 12], "methodnam": [11, 12], "modul": [1, 2, 3, 9, 11, 12], "modular": [4, 13], "modular_vers": [2, 3, 7], "most": 6, "move": 3, "none": [2, 3], "number": 6, "otherwis": 6, "out": 11, "paramet": [2, 3], "plai": [3, 4, 6], "player": [3, 6], "posit": [2, 3, 11], "possibl": 3, "print": [2, 6], "print_board": [5, 6], "project": [0, 4, 5, 6, 7, 8, 10, 13], "prompt": 3, "py": 6, "pytest": [9, 10], "python": 6, "repres": 6, "result": 6, "return": [2, 3, 6, 11, 12], "row": [6, 9], "run": [1, 6], "runtest": [11, 12], "script": [5, 6, 8], "script_vers": [6, 7], "set": [2, 11, 12], "setup": [11, 12, 13], "simpl": 6, "size": 2, "sourc": [7, 10], "specif": 3, "specifi": 2, "src": [0, 2, 3, 6], "start": [1, 3, 6], "statu": 6, "str": [2, 3, 6], "tac": [1, 2, 3, 6], "talli": 6, "tally_win": [5, 6], "termin": [2, 6], "test": [0, 9, 11, 12], "test_board": [10, 13], "test_check_tie_conditions_board_no_tie_returns_fals": [12, 13], "test_check_tie_conditions_empty_board_returns_fals": [12, 13], "test_check_tie_conditions_full_board_returns_tru": [12, 13], "test_check_win_conditions_diagonal_win_returns_tru": [12, 13], "test_check_win_conditions_horizontal_win_returns_tru": [12, 13], "test_check_win_conditions_no_win_returns_fals": [12, 13], "test_check_win_conditions_vertical_win_returns_tru": [12, 13], "test_enter_position_sets_correctli": [11, 13], "test_gam": [10, 13], "test_get_position_returns_correct_charact": [11, 13], "test_is_win_column_win": [8, 9], "test_is_win_diagonal_win": [8, 9], "test_is_win_no_win": [8, 9], "test_is_win_row_win": [8, 9], "test_tic_tac_to": [8, 10], "test_validate_position_filled_position_returns_fals": [11, 13], "test_validate_position_invalid_position_returns_fals": [11, 13], "test_validate_position_valid_position_returns_tru": [11, 13], "testboard": [11, 13], "testgam": [12, 13], "thi": [2, 6], "through": 6, "tic": [1, 2, 3, 6], "tic_tac_to": [6, 9], "tic_tic_tac_to": [5, 7], "tie": [3, 12], "toe": [1, 2, 3, 6], "true": [6, 11, 12], "unittest": [10, 11, 12], "until": 3, "up": [11, 12], "us": 3, "usag": 6, "valid": [3, 11], "valu": 6, "version": [4, 5, 6, 8, 13], "vertic": 12, "when": [1, 6, 12], "who": 6, "win": [3, 6, 9, 12], "within": [2, 6], "won": 6}, "titles": ["ipos-sphinx-activity documentation", "main", "board", "game", "modular_version", "script_version", "tic_tic_tac_toe", "src", "pytests", "test_tic_tac_toe", "tests", "test_board", "test_game", "unittests"], "titleterms": {"activ": 0, "board": 2, "content": [0, 4, 5, 7, 8, 10, 13], "document": 0, "game": 3, "ipo": 0, "main": 1, "modular_vers": 4, "pytest": 8, "script_vers": 5, "sphinx": 0, "src": 7, "test": 10, "test_board": 11, "test_gam": 12, "test_tic_tac_to": 9, "tic_tic_tac_to": 6, "unittest": 13}})